{{define "chain_mempool" -}}
<!DOCTYPE html>
<html lang="en">
   {{$ChainType := .ChainType}}
   {{template "html-head" headData .CommonPageData (printf "%s Mempool" (chainName $ChainType))}}
   {{ template "mutilchain_navbar" . }}
   {{with .Mempool -}}
   <div class="container main"
      data-controller="time">
      <p class="fs-20"><a class="fs-20" href="/">Homepage</a>&nbsp;> <a class="fs-20" href="/chain/{{$ChainType}}">{{chainName $ChainType}}</a>&nbsp;> Mempool</p>
      <div class="pb-2 h4">Mempool</div>
      <div class="row mx-0 my-2">
         <div class="col-24 col-sm-12 col-md-24 col-lg-12 bg-green-3 py-3 px-3 position-relative common-card">
            <div class="card-pointer pointer-right d-none d-sm-block d-md-none d-lg-block"></div>
            <div class="card-pointer pointer-bottom d-sm-none d-md-block d-lg-none"></div>
            <div class="ps-1">
               <span class="dcricon-stack h5"></span>
               <span class="h6 d-inline-block ps-2">Current Mempool</span>
            </div>
            <div class="row mt-2">
               <div class="col-24 col-md-12 col-lg-24 col-xl-12 row pt-2 pt-md-0 pt-lg-2 pt-xl-0">
                  <div class="col-12 text-center">
                     <div class="d-inline-block text-center text-md-start text-lg-center text-xl-start">
                        <span class="text-secondary fs13">Total Sent</span>
                        <br>
                        <span class="h4" id="totalSent">{{threeSigFigs .TotalOut}}</span> <span class="text-secondary">{{$ChainType}}</span>
                     </div>
                  </div>
                  <div class="col-12 text-center">
                     <div class="d-inline-block text-center text-md-start text-lg-center text-xl-start">
                        <span class="text-secondary fs13">Last Block</span>
                        <br>
                        <span class="h4" id="bestBlock">{{.LastBlockHeight}}</span>
                     </div>
                  </div>
               </div>
               <div class="col-24 col-md-12 col-lg-24 col-xl-12 row pt-2 pt-md-0 pt-lg-2 pt-xl-0">
                  <div class="col-12 text-center">
                     <div class="d-inline-block text-center text-md-start text-lg-center text-xl-start">
                        <span class="text-secondary fs13" data-time-target="header" data-jstitle="Since Last Block">Last Block</span>
                        <br>
                        <span class="h4" id="bestBlockTime" data-time-target="age" data-age="{{.LastBlockTime}}"><span class="fs13">{{.FormattedBlockTime}}</span></span>
                     </div>
                  </div>
                  <div class="col-12 text-center">
                     <div class="d-inline-block text-center text-md-start text-lg-center text-xl-start">
                        <span class="text-secondary fs13">Size</span>
                        <br>
                        <span id="lastBlockSize" class="h4">{{.FormattedTotalSize}}</span>
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="col-24 col-sm-12 col-md-24 col-lg-12 blue-card pt-3 pb-3 px-3">
            <div class="ps-1">
               <!-- <span class="dcricon-stack h5"></span> -->
               <span class="h6 d-inline-block ps-2">Details</span>
            </div>
            <div class="row mt-1">
               <div class="col-24 col-md-12 col-lg-24 col-xl-12 row pb-3">
                  <div class="col-12">
                     <div class="text-center fs13">Total Transactions</div>
                     <div class="text-center h4 mb-0"><div id="txCount">{{.TotalTransactions}}</div></div>
                  </div>
                  <div class="col-12">
                     <div class="text-center fs13">Fee Total ({{toUpperCase $ChainType}})</div>
                     <div class="text-center h4 mb-0">
                        <span id="totalFees">{{template "decimalParts" (float64AsDecimalParts .TotalFee 8 false)}}</span>
                     </div>
                  </div>
               </div>
               <div class="col-24 col-md-12 col-lg-24 col-xl-12 row pb-3">
                  <div class="col-12">
                     <div class="text-center fs13">Processing Outputs</div>
                     <div class="text-center h4 mb-0"><div id="txOutCount">{{.OutputsCount}}</div></div>
                  </div>
                    <div class="col-12">
                     <div class="text-center fs13">Fee Rate ({{if eq $ChainType "ltc"}}lit{{else}}sat{{end}}/vB)</div>
                     <div class="text-center h4 mb-0"><div class="network-stats-content d-inline-block">
                        <span id="minFeeRate">{{template "decimalParts" (float64AsDecimalParts .MinFeeRatevB 0 false)}}</span> - 
                        <span id="maxFeeRate">{{template "decimalParts" (float64AsDecimalParts .MaxFeeRatevB 0 false)}}</span>
                     </div></div>
                  </div>
               </div>
            </div>
         </div>
      </div>
      <div>
         <div class="row">
            <div class="col-sm-24">
               <h4 class="pt-5 pb-2"><span>Lastest Transactions</span></h4>
               <div class="br-8 b--def bgc-plain-bright pb-10">
                  <div class="btable-table-wrap maxh-none">
                     <table class="btable-table w-100">
                        <thead>
                           <tr class="bg-none">
                              <th>Transaction ID</th>
                              <th class="text-end">Total ({{toUpperCase $ChainType}})</th>
                              <th class="text-end">Fees ({{toUpperCase $ChainType}})</th>
                              <th class="text-end">Fee Rate ({{if eq $ChainType "btc"}}sat{{else}}lit{{end}}/vB)</th>
                           </tr>
                        </thead>
                        <tbody class="bgc-white" id="transList">
                           {{if gt .TotalTransactions 0 -}}
                           {{- range .Transactions -}}
                           <tr>
                              <td class="break-word clipboard">
                                 <a class="hash lh1rem" href="/tx/{{.Hash}}">{{.Hash}}</a>
                                 {{template "copyTextIcon"}}
                              </td>
                              <td class="mono fs15 text-end">
                                 {{template "decimalParts" (float64AsDecimalParts .TotalOut 8 false)}}
                              </td>
                              <td class="mono fs15 text-end">
                                 {{template "decimalParts" (float64AsDecimalParts .Fees 8 false)}}
                              </td>
                              <td class="mono fs15 text-end">{{printf "%.8f" (.FeeRate)}}</td>
                           </tr>
                           {{- end -}}
                           {{- else -}}
                           <tr class="no-tx-tr">
                              <td colspan="5">No regular transactions in mempool.</td>
                           </tr>
                           {{- end}}
                        </tbody>
                     </table>
                  </div>
               </div>
            </div>
         </div>
      </div>
   </div>
    {{if eq $ChainType "ltc"}}
   <script src="https://litecoinspace.org/mempool.js"></script>
   {{else}}
   <script src="https://mempool.space/mempool.js"></script>
   {{end}}
   <script src="/js/action/action_common.js"></script>
   <script>
var chainType = {{$ChainType}}
var wsHostName = chainType === 'ltc' ? ltcHostname : btcHostname
var init = async () => {
    const {bitcoin: {websocket}} = mempoolJS({
        hostname: wsHostName
    });
    const ws = websocket.initClient({
        options: ['blocks', 'stats', 'mempool-blocks', 'live-2h-chart'],
    });
    ws.addEventListener('message', function incoming({data}) {
        const res = JSON.parse(data.toString());
        if (res.mempoolInfo) {
            $("#txCount").html(decimalParts(res.mempoolInfo.size, true, 0))
            if (chainType === 'btc') {
                $("#totalFees").html(decimalParts(res.mempoolInfo.total_fee, false, 8, 2))
            }
        }
        if (res["mempool-blocks"]) {
            let totalSize = 0
            let ltcTotalFee = 0
            let minFeeRatevB = Number.MAX_VALUE
            let maxFeeRatevB = 0
            res["mempool-blocks"].forEach(memBlock => {
                totalSize += memBlock.blockSize
                if (chainType === 'ltc') {
                    ltcTotalFee += memBlock.totalFees
                }
                if (memBlock.feeRange) {
                    memBlock.feeRange.forEach(feevB => {
                        if (minFeeRatevB > feevB) {
                            minFeeRatevB = feevB
                        }
                        if (maxFeeRatevB < feevB) {
                            maxFeeRatevB = feevB
                        }
                    })
                }
            })
            if (chainType === 'ltc') {
                $("#totalFees").html(decimalParts(ltcTotalFee / 1e8, false, 8, 2))
            }
            $("#minFeeRate").html(decimalParts(minFeeRatevB, true, 0))
            $("#maxFeeRate").html(decimalParts(maxFeeRatevB, true, 0))
            $("#lastBlockSize").html(bytes(totalSize))
        }
          if (res.block) {
             const blockHash = res.block.id 
             const blockHeight = rest.block.height
             $("#bestBlock").text(blockHeight)
             $("#bestBlockTime").attr("data-age", rest.block.timestamp)
             const extras = res.block.extras
             $("#txOutCount").html(decimalParts(extras.totalOutputs, true, 0))
             $("#totalSent").html(decimalParts(extras.totalOutputAmt / 1e8, false, 8, 2))
          }
          if (res.blocks) {
            let txOutCount = 0
            let totalSent = 0
             res.blocks.forEach(block => {
                  const extras = block.extras
                  txOutCount += extras.totalOutputs
                  totalSent += extras.totalOutputAmt
             })
            $("#txOutCount").html(decimalParts(txOutCount, true, 0))
            $("#totalSent").html(decimalParts(totalSent / 1e8, false, 8, 2))
          }
        if (res.transactions) {
            let inner = ''
            res.transactions.forEach(tx => {
                const txHash = tx.txid
                const totalOut = tx.value
                const fees = tx.fee
                const rate = tx.rate
                inner += `<tr><td class="break-word clipboard"><a class="hash lh1rem" href="/tx/${txHash}">${txHash}</a>{{template "copyTextIcon"}}</td>`
                inner += `<td class="mono fs15 text-end">${decimalParts(totalOut / 1e8, false, 8, 2)}</td>`
                inner += `<td class="mono fs15 text-end">${decimalParts(fees / 1e8, false, 8, 2)}</td>`
                inner += `<td class="mono fs15 text-end">${decimalParts(rate, false, 8, 2)}</td></tr>`
            })
            $("#transList").html(inner)
        }
    });
};
init();
</script>

   {{- end}}
   {{ template "footer" . }}
   </body>
</html>
{{- end}}